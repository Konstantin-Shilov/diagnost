/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SurveyRouteImport } from './routes/survey'
import { Route as HistoryRouteImport } from './routes/history'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ResultsIdRouteImport } from './routes/results.$id'

const SurveyRoute = SurveyRouteImport.update({
  id: '/survey',
  path: '/survey',
  getParentRoute: () => rootRouteImport,
} as any)
const HistoryRoute = HistoryRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ResultsIdRoute = ResultsIdRouteImport.update({
  id: '/results/$id',
  path: '/results/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/history': typeof HistoryRoute
  '/survey': typeof SurveyRoute
  '/results/$id': typeof ResultsIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/history': typeof HistoryRoute
  '/survey': typeof SurveyRoute
  '/results/$id': typeof ResultsIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/history': typeof HistoryRoute
  '/survey': typeof SurveyRoute
  '/results/$id': typeof ResultsIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/history' | '/survey' | '/results/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/history' | '/survey' | '/results/$id'
  id: '__root__' | '/' | '/about' | '/history' | '/survey' | '/results/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  HistoryRoute: typeof HistoryRoute
  SurveyRoute: typeof SurveyRoute
  ResultsIdRoute: typeof ResultsIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/survey': {
      id: '/survey'
      path: '/survey'
      fullPath: '/survey'
      preLoaderRoute: typeof SurveyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/results/$id': {
      id: '/results/$id'
      path: '/results/$id'
      fullPath: '/results/$id'
      preLoaderRoute: typeof ResultsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  HistoryRoute: HistoryRoute,
  SurveyRoute: SurveyRoute,
  ResultsIdRoute: ResultsIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
